/**
 * CSSToggle
 * Control a CSS property with a toggle
 * to replace over-complex SVG animations
 * @class
 * @param {HTMLElement} element
 * @param {boolean} on
 * @param {number} attack
 * @param {number} release
 * @param {string} effectClass
 * @param {string} parameter
 * @example
 * let toggle = new CSSToggle(document.querySelector('rect'), false, 0.1, 0.3, 'hc--light', 'fill');
 */


class CSSToggle {

    /**
     * @constructor 
     * @param {*} element 
     * @param {*} on 
     * @param {*} attack 
     * @param {*} release 
     * @param {*} effectClass 
     * @param {*} parameter 
     */

    constructor(element, on = false, attack = 0.1, release = 0.3, effectClass = 'hc--light', parameter = 'fill') {
        this.element = element;
        this.on = on;
        this.attack = attack;
        this.release = release;
        this.effectClass = effectClass;
    }

    /**
     * 
     */

    toggle() {
        this.on = !this.on;

        let {element, on, attack, release, effectClass} = this;

        element.style.transition = `fill ${on ? attack:release}s ease`;
        element.classList[on ? 'add' : 'remove'](effectClass);
    }

    /**
     * Trigger the effect
     * @param {*} on 
     * @param {*} trigger 
     */

    trigger(on, trigger = true) {
        this.on = on;
        
        let {element, attack, release, effectClass} = this;

        element.style.transition = `fill ${on ? attack:release}s ease`;
        element.classList[on ? 'add' : 'remove'](effectClass);
    }

    set attack(value) {
        this._attack = value;
    }

    set release(value) {
        this._release = value;
    }

}

export { CSSToggle }