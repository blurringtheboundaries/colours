// const createAnimation = require('./createAnimation')

import { createAnimation } from './createAnimation.js'

/**
 * Add an animation to an existing element..work in progress / used in some old projects
 * @param {HTMLElement | string} element object or id of object to find in DOM
 * @param {string | object} attribute or object with custom parameters
 * @param {array} events 
 * @param {number} duration 
 * @param {object} parameters 
 * @returns HTMLElement
 * 
 * @example 
 * CM.addAnimation(document.querySelector('rect'),{
    events:[
        [0,   'white'],
        [0.1, 'gray'],
        [1,   'white']
    ],
    duration:0.75,
    custom:{
        id:'testAni'
    }
})
 */

var addAnimation = function(element,attribute,events,duration,parameters={}, container){


    if(!container && typeof document !== 'undefined') container = document;
    
    let domElement = typeof element == 'object' ? element : container.getElementById(element);
    let animation;

    if(typeof arguments[1] == 'object') {
        let parameterObject = {
            custom:{
            }
        }
        Object.assign(parameterObject, arguments[1]);

        if(arguments.length>2) {
            container = arguments[2]
        };
        if(!('id' in parameterObject.custom)) parameterObject.custom['id'] = `${domElement.id}_${attribute}`;
        
        animation = createAnimation(parameterObject, container);
        
    } else {
        if(!('id' in parameters)) parameters['id'] = `${domElement.id}_${attribute}`;
        
        animation = createAnimation(attribute,events,duration,parameters, container);
    }
    
    domElement.appendChild(animation);

    return animation;

}

export { addAnimation }
// module.exports = addAnimation;