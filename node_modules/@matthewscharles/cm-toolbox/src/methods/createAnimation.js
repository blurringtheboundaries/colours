// const createNS = require('./createNS')

import { createNS } from './createNS.js'

/**
 * Create an SVG animation
 * @param {string | object} attribute html attribute or object with custom parameters
 * @param {array<array<number,number>>} events array of arrays: [time, value]
 * @param {number} duration duration in seconds
 * @param {object} parameters additional parameters e.g. begin, freeze
 * @returns {HTMLElement}
 */

var createAnimation = function(attribute,events,duration,parameters={}, container){

    if(!container && typeof document !== 'undefined') container = document;

    let parameterObject = {
        custom:{
            attributeName: 'fill',
            begin: 'indefinite',
            repeatCount: '1',
            dur: `1s`,
            fill: 'freeze',
            keyTimes:'0; 1',
            values:'red; blue'
        }
        
    }

    if(typeof arguments[0] == 'object') {
        Object.assign(parameterObject.custom, arguments[0].custom);
        if(!('dur' in parameterObject.custom)) parameterObject.custom.dur = `${arguments[0].duration}s`;
        events = arguments[0].events;
        duration = arguments[0].duration;
        if(arguments.length>1) container = arguments[1];
    }
    
    let values = '', times = '';
    
    if(!Array.isArray(events)) {
        let newEvents = [];
        Object.keys(events).forEach(key=>{
            newEvents.push([key,events[key]])
        })

        events = newEvents;
        events.sort((a,b)=>a[0]-b[0]);

    }

    events.forEach(([time,value],i)=>{
        if(parseFloat(time) % 1 ==0)time+='.00';
        let divider = i < Object.keys(events).length-1?'; ':'';
        times += `${time}${divider}`;
        values += `${value}${divider}`;
    })
    parameterObject.custom.values = values;
    parameterObject.custom.keyTimes = times;

    let output = createNS(attribute=='translate' ? 'animateTransform' : 'animate', parameterObject, container)
    output = Object.assign(output, parameters)
    return output;
}

// module.exports = createAnimation;

export { createAnimation }