// const constrain = require('./constrain')

import { constrain } from './constrain.js'

/**
 * Scaling
 * Convert the incoming value from original range (inMin to inMax) to target range (outMin to outMax).
 * ! only works with positive numbers
 * @param {number} value 
 * @param {number} inMin        input minimum
 * @param {number} inMax        input maximum
 * @param {number} outMin       output minimum
 * @param {number} outMax       output maximum
 * @param {boolean} constrain   constrain to output range?
 * @param {boolean} integer     convert to integer?
 * @returns {number}            mapped value
 */

 var map = function(value, in_min, in_max, out_min, out_max, constrainFlag = false, convertToIntegerFlag = false){

  value -= in_min;
  value *= out_max - out_min;
  value /= in_max - in_min;
  value += in_min;

  value = convertToIntegerFlag ? Math.floor(value) : value;
  value = constrainFlag ? constrain(value,out_min,out_max) : value

  return value;
}

//  module.exports = map;

export { map }