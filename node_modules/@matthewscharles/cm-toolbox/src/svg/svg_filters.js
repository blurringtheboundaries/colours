import {generateSVGFilter, generateFeComponentTransfer, generateFeColorMatrix, generateAnimate} from './svg_filter_generators.js';


function filterFromDictionary(exampleFilter){
    const filter = generateSVGFilter(exampleFilter.id, exampleFilter.filterUnits);
    const feComponentTransfer = generateFeComponentTransfer('feComponentTransfer1');
    filter.appendChild(feComponentTransfer);
    Object.keys(exampleFilter.components).forEach(key => {
        const component = exampleFilter.components[key];
        const feColorMatrix = generateFeColorMatrix(component.id, component.type, component.values);
        filter.appendChild(feColorMatrix);
    })
    if(Object.keys(exampleFilter.animations).length > 0){
        Object.keys(exampleFilter.animations).forEach(key => {
            const animation = exampleFilter.animations[key];
            const animateElement = generateAnimate(animation);
            filter.appendChild(animateElement);
        })
    }

 
    return filter;
}

function addFiltersToDefs(filterCollection, svg = document.querySelector('svg')){
    Object.keys(filterCollection).forEach(key => {
        const filter = filterCollection[key];
        const filterElement = filterFromDictionary(filter);
        if(!document.querySelector('svg defs')){
            const defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');
            document.querySelector('svg').insertBefore(defs, document.querySelector('svg').firstChild);
        }
        const defs = document.querySelector('svg defs');
        defs.appendChild(filterElement);
    })
    

    const newSvg = svg.cloneNode(true);
    svg.parentNode.replaceChild(newSvg, svg);

}

function applyFilter(filter, element){
    const newElement = element.cloneNode(true);
    newElement.setAttribute('filter', `url(#${filter.id})`);
    element.parentNode.replaceChild(newElement, element);
    const filterElement = document.querySelector(`#${filter.id}`);
    const animations = filterElement.querySelectorAll('animate');
    animations.forEach(animation => {
        animation.setAttribute('href', `#${animation.getAttribute('href').slice(1)}${element.id}`);
        animation.setAttribute('id', `${animation.getAttribute('id')}${element.id}`);
    })
}




export {addFiltersToDefs, filterFromDictionary, applyFilter}