
/**
 * Touch Pickup
 * @class
 */

const MultitouchMapper = function(){
   this.listen();
}


MultitouchMapper.prototype = {
   listeners: [ 
    'mousemove','mousedown','mouseup', 'mouseleave', 
    'touchstart', 'touchmove', 'touchend','touchcancel'
   ],
   eventQueue:[],
   depth:1,
   preventDefault:true,
   mono:true,
   buffer:{},
   rejectedBuffer:[],
   touchStartTime: 0,
   target:document,
   debounce:true,
   customEvent:{
    enabled:true,
    name:'touch-pickup'
   },
   classes:{
    allow:'allowDefault',
    prevent:'preventDefault'
   },
   actions:{
    'default':{
        touch:(element, e, obj)=>{},
        hover:(element, e, obj)=>{},
        drag:(element, e, obj)=>{},
        leave:(element, e, obj)=>{},
        enter:(element, e, obj)=>{},
        start:(element, e, obj)=>{},
        end:(element, e, obj)=>{}
    },
    '.allowDefault':{
        start:function(){
            window.currentPreventDefault = false;
        },
        hover:function(){
            window.currentPreventDefault = false;
        },
        move:function(){
            window.currentPreventDefault = false;
        },
        drag:function(){
            window.currentPreventDefault = false;
        },
        leave:function(){
            window.currentPreventDefault = false;
        },
        enter:function(){
            window.currentPreventDefault = false;
        },
        end:function(){
            window.currentPreventDefault = false;
        }
    },
    '.preventDefault':{
        touch:function(element, e, obj){
            e.preventDefault();
        },
        hover:function(element, e, obj){
            e.preventDefault();
        },
        move:function(){
            window.currentPreventDefault = false;
        },
        drag:function(element, e, obj){
            e.preventDefault();
        },
        leave:function(element, e, obj){
            e.preventDefault();
        },
        enter:function(element, e, obj){
            e.preventDefault();
        },
        end:function(){
            window.currentPreventDefault = false;
        }
    }
   }
}

MultitouchMapper.prototype.constructor = MultitouchMapper;


const methods = [
    'getListOfElements',
    'matchActions',
    'handleEvent',
    'listen',
    'unlisten',
    'processElement',
    'setDefaultAction',
    'setAction',
    'setActionsAsDictionary',
    'assignAllowDefault',
    'addStyles'
  ]
  
  methods.forEach(x=>MultitouchMapper.prototype[x] = require(`./src/${x}`));
  
  





module.exports = MultitouchMapper;