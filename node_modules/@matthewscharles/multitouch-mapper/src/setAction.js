/**
 * Set action or dictionary for all three actions
 * @param {*} queryString 
 * @param {*} action 
 * @param {*} method 
 * @returns {object} this for method chaining
 */

const setAction = function(queryString, action, method){
    if(!Object.keys(this.actions).includes(queryString)) this.actions[queryString] = {}

    Object.assign(this.actions[queryString], {

        start:function(element, e, obj){},
        enter:function(element, e, obj){},
        move:function(element, e, obj){},
        leave:function(element, e, obj){},
        end:function(element, e, obj){}

    })
    
    // this is not strictly a query, but it could be...
    if(typeof action == 'object'){

        this.setActionsAsDictionary(queryString, action);

    } else if(typeof action == 'string') {

        if(action == 'all'){

            Object.keys(this.actions[queryString]).forEach(x=>{
                this.actions[queryString][x] = method.bind(this)
            })
            
        } else {

            this.actions[queryString][action] = method.bind(this);
            
        }
        
    }
    
    return this;
}

module.exports = setAction;