(()=>{"use strict";class t{constructor(t=["all"]){this.devices=t,this.map={},this.init()}}Object.assign(t.prototype,{process:function(t){let[e,i,n]=t.data;if(e>=176&&e<=191){let t=e-176;console.log("channel:",e-175,"cc:",i,"value:",n),this.map[t].cc[i](n)}else if(e>=144&&e<=159){let t=e-144;this.processNote(t,i,n),this.map[t].note[i](n)}else if(e>=128&&e<=143){let t=e-128;"undefined"==n&&(n=0),this.map[t].noteOff[i](0)}},init:function(){for(let t=0;t<16;t++){this.map[t]={},this.map[t].cc=[],this.map[t].note=[],this.map[t].noteOff=[],this.map[t].noteRange={};for(let e=0;e<128;e++)this.map[t].cc[e]=function(){},this.map[t].note[e]=function(){},this.map[t].noteOff[e]=function(){}}},success:function(t){for(let e of t.inputs.values())e.onmidimessage=this.process.bind(this),console.log("MIDI Mapper listening:",e.name,e)},failure:function(){console.log("No MIDI device available")},listen:function(){navigator.requestMIDIAccess().then(this.success.bind(this),this.failure.bind(this))},assign:function(t,e,i,n){if(16==t)for(let t=0;t<16;t++)this.map[t][e][i]=n;else this.map[t][e][i]=n;return this},assignRange:function(t,e,i){"full"!=e&&"all"!=e||(e="0,127"),this.map[t].noteRange[e]=i},getRanges:function(t,e,i){return Object.entries(this.map[t].noteRange).filter((([t,i])=>{let n=t.split(",").map((t=>parseFloat(t)));return e>=n[0]&&e<=n[1]})).map((t=>t[1]))},processRange:function(t,e,i){t.forEach((t=>t(e,i)))},processNote:function(t,e,i){this.processRange(this.getRanges(...arguments),e,i)}});const e=t;window.MidiMapper=e,window.app={midi:new e},app.midi.map[0].noteRange["0,127"]=function(t,e){console.log(t,e)},app.midi.listen()})();